---
- hosts: GitLab-server
  become: yes
  become_user: root
  become_method: sudo
  tasks:

    - name: Include OS-specific variables.
      include_vars: "{{ ansible_os_family }}.yml"

    - name: Check if GitLab configuration file already exists.
      stat: path=/etc/gitlab/gitlab.rb
      register: gitlab_config_file

    - name: Check if GitLab is already installed.
      stat: path=/usr/bin/gitlab-ctl
      register: gitlab_file

    - name: Install Epel repository.
      yum: name=epel-release state=present

    - name: Install GitLab dependencies.
      yum: name={{ item }} state=present
      with_items:
        - git
        - libselinux-python
        - openssh-server
        - postfix
        - curl
        - openssl
        - python-pip

    - name: Download GitLab repository installation script.
      get_url:
        url: "{{ gitlab_repository_installation_script_url }}"
        dest: /tmp/gitlab_install_repository.sh
        validate_certs: "{{ gitlab_download_validate_certs }}"
      when: (gitlab_file.stat.exists == false)

    - name: Install GitLab repository
      command: bash /tmp/gitlab_install_repository.sh
      when: (gitlab_file.stat.exists == false)

    - name: Install GitLab
      yum: name=gitlab-ce-9.1.4-ce.0.el6.x86_64  state=present
      when: (gitlab_file.stat.exists == false)

    - name: Reconfigure GitLab (first run).
      command: >
        gitlab-ctl reconfigure
        creates=/var/opt/gitlab/bootstrapped
      when: (gitlab_file.stat.exists == false)
      failed_when: false

    - name: Copy GitLab configuration file.
      template:
        src: gitlab.rb.j2
        dest: /etc/gitlab/gitlab.rb
        owner: root
        group: root
        mode: 0600

    - name: Reconfigure GitLab.
      shell: gitlab-ctl reconfigure && gitlab-ctl start

    - name: Install argparse
      easy_install:
        name: argparse
        state: latest

    - name: Install python modules.
      shell: pip install {{ item }}
      with_items:
         - yamllint
         - pexpect

    - name: Get repo from github
      git:
        repo: 'https://github.com/MikeGreyDog/Gitlab-backups.git'
        dest: /tmp/repo/Gitlab-backups
 
    - name: Get the latest backup name
      command: ls /tmp/repo/Gitlab-backups/New-Backup
      register: backup_filename

    - name: Get backup timestamp
      shell: echo "{{ backup_filename.stdout }}" |
             sed -r 's/_[a-z]+_[a-z].*//'
      register: backup_timestamp

    - name: Copy latest backup
      copy:
        src: /tmp/repo/Gitlab-backups/New-Backup/{{ backup_filename.stdout }}
        dest: /var/opt/gitlab/backups
        owner: git
        group: git
        mode: 0600
        remote_src: True

    - name: Stop Gitlab services.
      shell: gitlab-ctl stop unicorn && gitlab-ctl stop sidekiq

    - name: Restore Gitlab from backup.
      expect: 
        command: gitlab-rake gitlab:backup:restore BACKUP={{ backup_timestamp.stdout }}
        responses:
          "Do you want to continue (yes/no)?": "yes"

    - name: Stop iptables :).
      shell: service iptables stop

    - name: Create hook directory
      file: 
        path: /var/opt/gitlab/git-data/repositories/lv239/Ansible-playbooks.git/hooks/post-receive.d
        owner: git
        group: git
        state: directory

    - name: Copy post-recive hook
      copy:
        src: post-receive
        dest: /var/opt/gitlab/git-data/repositories/lv239/Ansible-playbooks.git/hooks/post-receive.d/
        owner: git
        group: git
        mode: 0600

    - name: Start Gitlab.
      shell: gitlab-ctl start
  
    - name: Remove cloned repo
      shell: rm -rf /tmp/repo/Gitlab-backups

